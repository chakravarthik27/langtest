[project]
name = "langtest"
version = "2.6.0"
description = "John Snow Labs provides a library for delivering safe & effective NLP models."
authors = [{ name = "John Snow Labs", email = "support@johnsnowlabs.com" }]
requires-python = ">=3.10,<4.0"
readme = "README.md"
license = "Apache-2.0"
keywords = [
    "LLM",
    "NLP",
    "AI",
    "testing",
    "robustness",
    "bias",
    "fairness",
    "representation",
    "accuracy",
    "language processing",
    "natural language understanding",
    "machine learning",
    "data science",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pydantic==2.9.2",
    "nest-asyncio>=1.5.0,<2",
    "jsonlines>=3.1.0",
    "pandas>=2.0.3,<3",
    "pyyaml~=6.0",
    "tqdm>=4.67.1,<5",
    "tenacity>=8.2.2,<9",
    "typing-extensions>=4.10.0,<5",
    "boto3>=1.34.93,<2",
    "importlib-resources>=6.4.0,<7",
    "click>=8.1.7",
    "openpyxl>=3.1.5",
    "tables>=3.8.0",
    "pillow>=11.0.0",
]

[project.optional-dependencies]
transformers = [
    "transformers>=4.44.2,<5",
    "torch>=2.0.0,<3",
    "accelerate==0.34.2",
    "datasets>=2.14.0",
]
evaluate = [
    "evaluate>=0.4.0,<0.5",
    "rouge-score>=0.1.2,<0.2",
    "seqeval>=1.2.0,<2",
]
spacy = ["spacy>=3.0.0"]
johnsnowlabs = ["johnsnowlabs==5.5.0"]
openai = [
    "openai>=1.61.1,<2",
    "langchain>=0.3.15,<0.4",
    "langchain-openai>=0.3.7,<0.4",
    "langchain-community==0.3.5",
]
cohere = [
    "cohere>=4.57.0,<5",
    "langchain>=0.3.15,<0.4",
    "langchain-community==0.3.5",
]
ai21 = [
    "ai21>=1.1.0,<2",
    "langchain>=0.3.15,<0.4",
    "langchain-community==0.3.5",
]
huggingface_hub = [
    "huggingface_hub>0.16.0",
    "langchain>=0.3.15,<0.4",
]
metaflow = ["metaflow>=2.9.0"]
mlflow = ["mlflow>=2.19.0,<3"]
datasets = ["datasets>=2.14.0"]
matplotlib = ["matplotlib>=3.7.2,<4"]
databricks = [
    "langchain>=0.3.15,<0.4",
    "langchain-databricks==0.1.1",
    "langchain-community==0.3.5",
    "langchain-openai>=0.3.7,<0.4",
]
llms = [
    "langchain>=0.3.15,<0.4",
    "langchain-community==0.3.5",
    "langchain-openai>=0.3.7,<0.4",
    "langchain-databricks==0.1.1",
    "langchain-ollama>=0.2.2,<0.3",
]
ollama_sdk = [
    "langchain>=0.3.15,<0.4",
    "langchain-community==0.3.5",
    "ollama>=0.4.7,<0.5",
]

[project.urls]
Homepage = "https://www.langtest.org"
Repository = "https://github.com/JohnSnowLabs/langtest/"
Documentation = "https://langtest.org/docs/pages/docs/install"

[project.scripts]
langtest = "langtest.__main__:cli"

[dependency-groups]
dev = [
    "ipdb>=0.13.13,<0.14",
    "pytest>=7.4.0,<8",
    "taskipy>=1.11.0,<2",
    "en-core-web-sm",
    "black>=24.10.0,<25",
    "pyproject-flake8<6.0.0",
    "pre-commit>=3.3.3,<4",
    "pydocstyle>=6.3.0,<7",
    "ipykernel>=6.29.5,<7",
    "pytest-cov>=6.0.0,<7",
]

[tool.flake8]
max-line-length = 90
ignore = "E203,E501,W503"
per-file-ignores = '__init__.py:F401'

[tool.uv]

[tool.uv.sources]
en-core-web-sm = { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.8.0/en_core_web_sm-3.8.0.tar.gz" }

[tool.black]
line-length = 90
extend-exclude = "langtest/transform/constants.py"
exclude = 'langtest/errors.py'

[tool.hatch.build.targets.sdist]
exclude = ["tests/"]

[tool.hatch.build.targets.wheel]
exclude = ["tests/"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.taskipy.tasks]
test = "pytest tests/* -v --disable-warnings"
lint = "pflake8 langtest/"
format = "black langtest/ tests/"
check-docstrings = "pydocstyle langtest/ --add-select=D417 --add-ignore=D100,D104,D105,D400,D415 --convention=google"
is-formatted = "black --check langtest/ tests/"
force-cpu-torch = "python -m pip install torch --index-url https://download.pytorch.org/whl/cpu"
extra-lib = "python -m pip install openpyxl tables"
